# 圏論的処理について
# tqを利用した圏表現の試行
## tq表現
### レファレンス
$#<n> ... 項レファレンス :: Src、Dstは同一オブジェクトと見做す
  #<n> は項ラベル
$##<n> ... 木レファレンス :: Src、Dstはコピーと見做す、ここでの圏表現では利用しない
  ##<n> は木ラベル
### 圏のための表現
- $xxx$ ... オペレータ :: 処理が内部予約されている
とする。

## 定義
### Category と CategoryGraph
- Object
  * Dom
  * Cod
- Arrow
  * Arr
において、Arrowによって関係が定義されるObjectが圏である。
ここで、$CAT$ :: Category、$CG$ :: CategoryGraph を導入する。
写像
	f:A->B
	f(A)=B
は、tq では、
	$CAT$(f,A,B)
	$CG$(A($#1f),#1B)
と表す。
	$CAT$
はCategoryクラスを表す。
	$CG$
はCategoryGraphクラスを表す。

tq による無名表現は以下である。
	$CAT$($ARR$,$DOM$,$COD$)
	$CG$($DOM$,...)

#### 基本処理
- 射
	f:A->B
	$CAT$(f,A,B)
のとき、
	$ARR$($CAT$(f,A,B)) => f
	$DOM$($CAT$(f,A,B)) => A
	$COD$($CAT$(f,A,B)) => B
である。

-- 例
	h:G->U(C(G))
のtq表現
	$CAT$(h,#2G,U(C($#2)))
	$CG$(#2G($#1h),#1U(C($#2)))

- 恒等射
恒等射の表現は、
	$CAT$($1$(A),A,A)
	$CG$(A($#1$1$(A)),#1A)
となる。

- 合成
	g&f(a)
	$&$(g,f)(a)
は、
	g(f(a))
の別表現である。ただし、tqではこの表現は一部抑制される。

- 結合則
すべての
	$CAT$(f,A,B); $CAT$(g,B,C); $CAT$(h,C,D)
に対して、
	h(g(f())) = h(g)(f()) = h(g)(f)()
である。

- 単位元

- Functor
	F:C->D
	$CAT$(F,C,D)
のとき、以下を満たすのがFunctorである。
1.	F($CAT$(f,C,D)) = $CAT$(F(f),F(C),F(D));
2.	F($1$(A)) = $1$(F(A));
3.	F(g(f())) = F(g)(F(f()))

-- 例
	A -f-> B
	 \     |
	  \    g
	g&f\   |
	    \  |
	    _\|| 
	      \|/
	       C 

	$CAT$(f,A,B) ; $CAT$(g,B,C) => $CAT$($&$(g,f),A,C)

- モノ射
圏Cにおいて、
	C -g-> A -f-> B
	  -h->
のCategoryGraph表現は
	$CG$(C($#2g,$#2h),#2A($#3f),#3B)
である。
	f&g = f&h
ならば、
	g = h
である。

- エピ射
圏Dにおいて、
	A -f-> B -i-> D
	         -j->
のtq表現は
	$CG$(A($#2f),#2B($#3i,$#3j),#3D)
である。
	i&f = j&f
ならば、
	i = j
である。


## λ計算（考え中）
### 基本
- 関数適応: (M N)
  (M,N)
- 関数抽象（定義）: (λx.M)
  \(x)(M)


