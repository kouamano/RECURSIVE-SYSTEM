   0  $accept : list $end

   1  list : head
   2       | body
   3       | head body

   4  body : FUNC_S FUNC_E
   5       | FUNC_S arg FUNC_E
   6       | FUNC_S body FUNC_E
   7       | body body

   8  arg : head

   9  head : HEAD
  10       | list
  11       | NULLCHAR

state 0
	$accept : . list $end  (0)

	FUNC_S  shift 1
	HEAD  shift 2
	NULLCHAR  shift 3
	.  error

	list  goto 4
	head  goto 5
	body  goto 6


state 1
	body : FUNC_S . FUNC_E  (4)
	body : FUNC_S . arg FUNC_E  (5)
	body : FUNC_S . body FUNC_E  (6)

	FUNC_S  shift 1
	FUNC_E  shift 7
	HEAD  shift 2
	NULLCHAR  shift 3
	.  error

	list  goto 8
	head  goto 9
	body  goto 10
	arg  goto 11


state 2
	head : HEAD .  (9)

	.  reduce 9


state 3
	head : NULLCHAR .  (11)

	.  reduce 11


state 4
	$accept : list . $end  (0)
	head : list .  (10)

	$end  accept
	.  reduce 10


5: shift/reduce conflict (shift 1, reduce 1) on FUNC_S
state 5
	list : head .  (1)
	list : head . body  (3)

	FUNC_S  shift 1
	$end  reduce 1

	body  goto 12


6: shift/reduce conflict (shift 1, reduce 2) on FUNC_S
state 6
	list : body .  (2)
	body : body . body  (7)

	FUNC_S  shift 1
	$end  reduce 2

	body  goto 13


state 7
	body : FUNC_S FUNC_E .  (4)

	.  reduce 4


state 8
	head : list .  (10)

	.  reduce 10


9: shift/reduce conflict (shift 1, reduce 1) on FUNC_S
9: reduce/reduce conflict (reduce 1, reduce 8) on FUNC_E
state 9
	list : head .  (1)
	list : head . body  (3)
	arg : head .  (8)

	FUNC_S  shift 1
	FUNC_E  reduce 1

	body  goto 12


10: shift/reduce conflict (shift 1, reduce 2) on FUNC_S
10: shift/reduce conflict (shift 14, reduce 2) on FUNC_E
state 10
	list : body .  (2)
	body : FUNC_S body . FUNC_E  (6)
	body : body . body  (7)

	FUNC_S  shift 1
	FUNC_E  shift 14

	body  goto 13


state 11
	body : FUNC_S arg . FUNC_E  (5)

	FUNC_E  shift 15
	.  error


12: shift/reduce conflict (shift 1, reduce 3) on FUNC_S
state 12
	list : head body .  (3)
	body : body . body  (7)

	FUNC_S  shift 1
	$end  reduce 3
	FUNC_E  reduce 3

	body  goto 13


13: shift/reduce conflict (shift 1, reduce 7) on FUNC_S
state 13
	body : body . body  (7)
	body : body body .  (7)

	FUNC_S  shift 1
	$end  reduce 7
	FUNC_E  reduce 7

	body  goto 13


state 14
	body : FUNC_S body FUNC_E .  (6)

	.  reduce 6


state 15
	body : FUNC_S arg FUNC_E .  (5)

	.  reduce 5


Rules never reduced:
	arg : head  (8)


State 5 contains 1 shift/reduce conflict.
State 6 contains 1 shift/reduce conflict.
State 9 contains 1 shift/reduce conflict, 1 reduce/reduce conflict.
State 10 contains 2 shift/reduce conflicts.
State 12 contains 1 shift/reduce conflict.
State 13 contains 1 shift/reduce conflict.


6 terminals, 5 nonterminals
12 grammar rules, 16 states
