# tq のテスト
## クイックチェック
cd /home/kamano/gitsrc/RECURSIVE-SYSTEM
- コンバート
bash conv-check.script
cd DimensionDefinitionLanguage; bash conv-test.script; cd ../
- バインド
./tq.o in=test.ddf -FT out=test.ddl data=test.csv -Pin -Pout

## コンバート
上記

## エスケープ処理
### バックスラッシュ
- T式
./tq.o in=test_escape.1.t -FT -Pin
./tq.o in=test_escape.2.t -FT -Pin
./tq.o in=test_escape.3.t -FT -Pin
./tq.o in=test_escape.4.t -FT -Pin
./tq.o in=test_escape.5.t -FT -Pin
./tq.o in=test_escape.6.t -FT -Pin
./tq.o in=test_escape.7.t -FT -Pin
- バインド
./tq.o in=test.ddf -FT out=test.ddl data=test_esc.csv -Pin -Pout

## コンパイル
- -C
./tq.o in=test_compile.t -C -FT -Pin    
 => List(List(List,List,List,List))
- クオーティング
echo '$``List' | ./tq.o in=/dev/stdin -FT -C -Pin   
 => "List"

## サーチ
- ポジション指定
./tq.o in=test.t Sp=0,1 -FT -Pin

## データバインド
### 配列指定のあるリーフノードにバインドされる
./tq.o in=test_bind.t  data=test.csv -FT -Pin
 => $TOP($X$List($LEAF,$LEAF[]@(Length),$LEAF[2]@(Weight,mm)),$X$List[2]($LEAF[2]@(kg,1,2,322)))
### 大型配列のバインド4億データポイント/1.6G
time ./tq.o in=large-test_bind.t -FT -Pin data=large-test.csv data_buff=2000000000 | ./tq.o in=/dev/stdin

4 Nodes were operated.
400000004 Nodes were operated.
real    2m9.090s
user    1m33.104s
sys     0m39.314s

### エスケープ処理
./tq.o in=test_esc.t -FT  -Pin data=test_esc.csv
 => $1[2]($2[1]@(A,B),$3[2]($4[1]@(C,D,1,2\,3)),$5[4]@(4,5,6,7,\\,19,66,77))

## レファレンス
### 木
./tq.o in=test_ref-tree.ddf -Pin -FT
### セルフ
./tq.o in=test_ref.1.t -FMa -FT -Fh -Pin
- 完全グラフ
./tq.o in=test_ref-graph.4.t -Pin -FT -FMa
====multiline====>
[0],1,,,,5,,,,9,,,,
0,[1],2,3,4,5,,,,9,,,,
,,[2->0],,,,,,,,,,,
,,,[3->5],,,,,,,,,,
,,,,[4->9],,,,,,,,,
0,1,,,,[5],6,7,8,9,,,,
,,,,,,[6->0],,,,,,,
,,,,,,,[7->1],,,,,,
,,,,,,,,[8->9],,,,,
0,1,,,,5,,,,[9],10,11,12,
,,,,,,,,,,[10->0],,,
,,,,,,,,,,,[11->1],,
,,,,,,,,,,,,[12->5],


### セルフ+ output
./tq.o in=test_ref.1.t out=test_ref.1.ot -FMa -FT -Fh -Pin -Pout

### セルフ+ output + data    
- 正常パターン    
./tq.o in=test_ref.2.t out=test_ref.2.ot -FT -Pin -Pout data=test.csv
- out形式で参照をリストの入れ子に
./tq.o in=test_ref.2.t out=test_refR.2.ot -FT -Pin -Pout data=test.csv
- 再帰レファレンス($#9)
./tq.o in=test_ref.1.t out=test_ref.1.ot -FT -Pin -Pout data=test.csv
 => $#0@#0$0($#1@#1$1[5]@(322,4,5,68,7)($#0@#0$0,$#2@#2$2),$#2@#2$2($#1@#1$1[5]@(322,4,5,68,7),$#0@#0$0,$#9@#9$#2[3]@(Length,Weight,mm,kg,1,2)))

